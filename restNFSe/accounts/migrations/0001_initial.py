# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-30 00:20
from __future__ import unicode_literals

import django.core.files.storage
from django.db import migrations, models
import restNFSe.accounts.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome')),
                ('razao_social', models.CharField(max_length=100, unique=True, verbose_name='Razão Social')),
                ('cnpj', models.CharField(max_length=14, unique=True, verbose_name='CNPJ')),
                ('inscricao_municipal', models.CharField(max_length=20, verbose_name='Inscrição Municipal')),
                ('codigo_municipio', models.CharField(max_length=7, verbose_name='Código do Município')),
                ('producao', models.BooleanField(default=False, help_text='Define se as requisições serão realizadas no servidor de produção', verbose_name='Produção')),
                ('certificado_pfx', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/Users/Marcelo/Dev/Projetos/restNFSe/restNFSe/account/cert'), upload_to='', verbose_name='Certificado PFX')),
                ('senha_certificado', models.CharField(blank=True, max_length=20, verbose_name='Senha Certificado')),
                ('numero_lote_rps', models.IntegerField(default=1, verbose_name='Número Lote RPS')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Equipe')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuários',
                'verbose_name': 'Usuário',
            },
            managers=[
                ('objects', restNFSe.accounts.managers.CustomUserManager()),
            ],
        ),
    ]
